snippet calloc
    ${1:type}* ret = ${1}* calloc(1, sizeof(${1}));
    if (!ret) {
        fprintf(stderr, "Creating ${2} failed\n");
        exit(EXIT_FAILURE);
    }
	return ret;
snippet type
	typedef struct ${1:name} {
		$0
	} ${1}_t;
snippet enum
	typedef enum ${1:name} {
		$0
	} ${1}_t;
snippet main
	int main(int argc, char *argv[]) {
		${0}
	}
snippet fun
	${1:void} {$2:name}() {
	    $0
	}
snippet hdr
	#ifndef __${1:name}__H
	#define __${1}__H

	#endif /* __${1}__H */
snippet inc
	#include <${1:stdio}.h>
	$0
snippet incc
	#include "${1:name}.h"
	$0
snippet if
	if ({${1:condition}) {
	    $0
	}
snippet ife
	if ({${1:condition}) {
	    $2
	} else {
	    $0
	}
snippet for
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4}
	}
snippet wh
	while (${1:1}) {
		${0:${VISUAL}}
	}
